#%RAML 1.0
title: ilp-ledger
version: v1
baseUri: http://localhost:8081/ilp/ledger/{version}

types:
  TransferState:
    enum: [ proposed, prepared, executed, cancelled ]

#Base Objects
  Timeline:
    type: object
    properties:
      prepared_at: datetime
      executed_at?: datetime
      rejected_at?: datetime

  AccountResponse:
    type: object
    properties:
      id: string
      name: string
      ledger: string

  Funds:
    type: object
    properties:
      account: string
      amount: string
      authorized?: boolean
      memo?: Memo

  Transfer:
    type: object
    properties:
      id: 
        type: string
        pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
      ledger: 
        type: string
        pattern: ^(((ht|f)tp(s?))\://)?((([a-zA-Z0-9_\-]{2,}\.)+[a-zA-Z]{2,})|((?:(?:25[0-5]|2[0-4]\d|[01]\d\d|\d?\d)(?(\.?\d)\.)){4}))(:[a-zA-Z0-9]+)?(/[a-zA-Z0-9\-\._\?\,\'/\\\+&amp;%\$#\=~]*)?$
      rejection_reason: string
      execution_condition: 
        type: string
        pattern: "^cc:([1-9a-f][0-9a-f]{0,3}|0):[1-9a-f][0-9a-f]{0,15}:[a-zA-Z0-9_-]{0,86}:([1-9][0-9]{0,17}|0)$"
      cancellation_condition: 
        type: string
        pattern: "^cc:([1-9a-f][0-9a-f]{0,3}|0):[1-9a-f][0-9a-f]{0,15}:[a-zA-Z0-9_-]{0,86}:([1-9][0-9]{0,17}|0)$"
      expires_at: datetime
      state: string
      debits:
        type: Funds[]
        minItems: 1
      credits:
        type: Funds[]
        minItems: 1
      timeline?: Timeline
      additional_info?: object
      
  Memo:
    type: object
    
  Message:
    type: object
    properties:
      ledger:
        type: string
        pattern: ^((http(s?))\://)?((([a-zA-Z0-9_\-]{2,}\.)+[a-zA-Z]{2,})|((?:(?:25[0-5]|2[0-4]\d|[01]\d\d|\d?\d)(?(\.?\d)\.)){4}))(:[a-zA-Z0-9]+)?(/[a-zA-Z0-9\-\._\?\,\'/\\\+&amp;%\$#\=~]*)?$
      from:
        type: string
        pattern: ^((http(s?))\://)?((([a-zA-Z0-9_\-]{2,}\.)+[a-zA-Z]{2,})|((?:(?:25[0-5]|2[0-4]\d|[01]\d\d|\d?\d)(?(\.?\d)\.)){4}))(:[a-zA-Z0-9]+)?(/[a-zA-Z0-9\-\._\?\,\'/\\\+&amp;%\$#\=~]*)?$
      to:
        type: string
        pattern: ^((http(s?))\://)?((([a-zA-Z0-9_\-]{2,}\.)+[a-zA-Z]{2,})|((?:(?:25[0-5]|2[0-4]\d|[01]\d\d|\d?\d)(?(\.?\d)\.)){4}))(:[a-zA-Z0-9]+)?(/[a-zA-Z0-9\-\._\?\,\'/\\\+&amp;%\$#\=~]*)?$
      data:
        type: object
        
      

#Composite Objects

#Account related objects
  PutAccountRequest:
    type: object
    properties:
      name: string
      balance: string

  AuthorizedAccountResponse:
    type: AccountResponse
    properties:
      balance: string
      minimum_allowed_balance: string
      is_disabled: boolean


#Transfer related objects
  ProposeTransferRequest:
    type: Transfer

  ProposedTransferResponse:
    type: ProposeTransferRequest
    properties:
      state:
        enum: [ proposed ]

  PrepareTransferRequest:
    type: Transfer

  PreparedTransferResponse:
    type: PrepareTransferRequest
    properties:
      state:
        enum: [ prepared ]
        
  TransferResponse:
    type: Transfer
    properties:
      timeline:
        type: Timeline
        required: false

  TransferResponses:
    type: array
    items: TransferResponse
    minItems: 1

  TransferStateResponse:
    type: object
    properties:
      message:
        type: object
        properties:
          id: string
          state: string
      type: string
      signer: string
      public_key: string
      signature: string
      
  ServerMetadataResponse:
    description: Metadata about the ilp ledger instance
    type: object
    properties:
      currency_code: string
      currency_symbol: string
      connectors: 
        type: ConnectorDescriptor[]
      precision: integer
      scale: integer
      urls:
        description: (Optional) Paths to other methods exposed by this ledger. Each field name is short name for a method and the value is the path to that method.
        type: object
        required: false

  ConnectorDescriptor:
    type: object
    properties:
      id: string
      name: string
      connector?: string

  LedgerStatus:
    type: object
    properties:
      status: string

  

  #Error Definitions
  Error:
    type: object
    properties:
      id: string
      message: string

  ValidationError:
    type: Error
    properties:
      validationErrors:
        type: array
        items: ValidationItem
        minItems: 0

  ValidationItem: #Each item in the array of validation Errors
    type: object
    properties:
      message: string
      code: integer
      dataPath: string
      schemaPath: string
      subErrors: string
      stack: string
      params:
        type: object
        required: false
        properties:
          pattern: string
          key: string

  #400 Errors
  InvalidBodyError:
    description: The submitted JSON entity does not match the required schema.
    type: ValidationError

  InvalidUriParameterError:
    description: At least one provided URI or UUID parameter was invalid.
    type: ValidationError

  #403 Forbidden Errors
  UnauthorizedError:
    description: You do not have permissions to access or modify this resource in the requested way.
    type: Error

  #404 Not Found Errors
  NotFoundError:
    description: The requested resource could not be found.
    type: Error

  #422 Unprocessable Entity Errors
  AlreadyExistsError:
    description: The specified entity already exists and may not be modified.
    type: Error

  InsufficientFundsError:
    description: The source account does not have sufficient funds to satisfy the request.
    type: Error
    properties:
      owner: string

  UnmetConditionError:
    description: The submitted fulfillment does not meet the specified condition.
    type: Error
    properties:
      condition?: string
      fulfillment?: string

  UnprocessableEntityError:
    description: The provided entity is syntactically correct, but there is a generic semantic problem with it.
    type: Error

/:
  displayName: GET /v1
  get:
    description: Receive metadata about the ilp ledger instance

    responses:
      200:
        body:
          application/json:
            type: ServerMetadataResponse

/health:
  displayName: GET /v1/health
  get:
    description: Returns ledger health status

    responses:
      200:
        body:
          application/json:
            type: LedgerStatus

/accounts:
  displayName: GET /v1/accounts
  get:
    description: Retrieve all accounts

    responses:
      200:
        body:
          application/json:
            type: AccountResponse[] | AuthorizedAccountResponse[]

      403:  #UnauthorizedError
        description: HTTP/1.1 403 Forbidden - UnauthorizedError
        body:
          application/json:
            type: UnauthorizedError

  /{id}:
    displayName: POST /v1/accounts/:id
    uriParameters:
      id: string
    get:
      description: lookup an account

      responses:
          200:
            body:
              application/json:
                type: AccountResponse | AuthorizedAccountResponse

          400:  #InvalidUriParameterError
            body:
              application/json:
                description: HTTP/1.1 400 Bad Request - InvalidUriParameterError
                type: InvalidUriParameterError

          404:  #NotFoundError
            body:
              application/json:
                description: HTTP/1.1 404 Not Found - NotFoundError
                type: NotFoundError
    put:
      description: Create an account
      body:
        application/json:
          type:  PutAccountRequest

      responses:
        200:
          body:
            application/json:
              type: AuthorizedAccountResponse

        400:  #InvalidUriParameterError, InvalidBodyError
          body:
            application/json:
              description: HTTP/1.1 400 Bad Request - InvalidUriParameterError, InvalidBodyError
              type: InvalidUriParameterError | InvalidBodyError

        403:  #UnauthorizedError
          description: HTTP/1.1 403 Forbidden - UnauthorizedError
          body:
            application/json:
              type: UnauthorizedError

/transfers/{id}:
  displayName: Details about a specific transfer
  uriParameters:
    id: 
      type: string
      pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
  get:
    description: Transfer - Get details about a specific transfer

    responses:
      200:
        body:
          application/json:
            type: TransferResponse

      400:  #InvalidUriParameterError
        body:
          application/json:
            description: HTTP/1.1 400 Bad Request - InvalidUriParameterError
            type: InvalidUriParameterError

      404:  #NotFoundError
        body:
          application/json:
            description: HTTP/1.1 404 Not Found
            type: NotFoundError

  put:
    description:
    body:
      application/json:
        type: PrepareTransferRequest
    responses:
      201:  #prepared success
        body:
          application/json:
            type: PreparedTransferResponse
      
      400:  #InvalidUriParameterError, InvalidBodyError
        body:
          application/json:
            description: HTTP/1.1 400 Bad Request - InvalidUriParameterError, InvalidBodyError
            type: InvalidUriParameterError | InvalidBodyError

      422:  #InsufficientFundsError, UnprocessableEntityError, AlreadyExistsError
        body:
          application/json:
            description: HTTP/1.1 422 Unprocessable Entity - InsufficientFundsError, UnprocessableEntityError, AlreadyExistsError
            type: InsufficientFundsError | UnprocessableEntityError | AlreadyExistsError

  /fulfillment:
      displayName:  /v1/transfers/:id/fulfillment
      put:
        description: Transfer - Execute a prepared transfer
        body:
          text/plain:
            type:  string
            pattern: "^cf:([1-9a-f][0-9a-f]{0,3}|0):[a-zA-Z0-9_-]*$"
            example: "cf:0:_v8"
         
        responses:
          200:
            body:
              text/plain:
                type:  string
                pattern: "^cf:([1-9a-f][0-9a-f]{0,3}|0):[a-zA-Z0-9_-]*$"
                example: "cf:0:_v8"

          400:  #InvalidUriParameterError, InvalidBodyError
            body:
              application/json:
                description: HTTP/1.1 400 Bad Request - InvalidUriParameterError, InvalidBodyError
                type: InvalidUriParameterError | InvalidBodyError

          422:  #UnmetConditionError, UnprocessableEntityError
            body:
              application/json:
                description: HTTP/1.1 422 Unprocessable Entity - UnmetConditionError, UnprocessableEntityError
                type: UnmetConditionError | UnprocessableEntityError

  /rejection:
      displayName:  /v1/transfers/:id/rejection
      put:
        description: Transfer - Reject a transfer
        body:
          text/plain:
            type:  string
            example: "BlacklistedSender"
         
        responses:
          200:
            body:
              application/json:
                type: TransferResponse

          400:  #InvalidUriParameterError, InvalidBodyError
            body:
              application/json:
                description: HTTP/1.1 400 Bad Request - InvalidUriParameterError, InvalidBodyError
                type: InvalidUriParameterError | InvalidBodyError

          422:  #UnmetConditionError, UnprocessableEntityError
            body:
              application/json:
                description: HTTP/1.1 422 Unprocessable Entity - UnmetConditionError, UnprocessableEntityError
                type: UnmetConditionError | UnprocessableEntityError

/messages:
  displayName: Used to send notification to other accounts
  post:
    description: method to create 
    body:
      application/json:
        type: Message
    responses:
      201:
      400:  #InvalidUriParameterError, InvalidBodyError
        body:
          application/json:
            description: HTTP/1.1 400 Bad Request - InvalidUriParameterError, InvalidBodyError
            type: InvalidUriParameterError | InvalidBodyError

      422: #UnprocessableEntityError
        body:
          application/json:
            description: HTTP/1.1 422 Unprocessable Entity -  UnprocessableEntityError
            type: UnprocessableEntityError