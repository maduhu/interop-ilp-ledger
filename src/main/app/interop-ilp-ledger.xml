<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:metrics="http://www.mulesoft.org/schema/mule/metrics"
      xmlns:mule-ss="http://www.mulesoft.org/schema/mule/spring-security"
      xmlns:ss="http://www.springframework.org/schema/security"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/metrics http://www.mulesoft.org/schema/mule/metrics/current/mule-metrics.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/spring-security http://www.mulesoft.org/schema/mule/spring-security/current/mule-spring-security.xsd
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<spring:beans>
		<ss:authentication-manager alias="authenticationManager">
			<ss:authentication-provider>
				<ss:user-service id="userService">
					<ss:user name="admin" password="admin" authorities="ROLE_ADMIN" />
					<ss:user name="bob" password="1234" authorities="ROLE_ADMIN" />
					<ss:user name="alice" password="1234" authorities="ROLE_ADMIN" />
					<ss:user name="dfsp1-testconnector" password="1234" authorities="ROLE_ADMIN" />
					<ss:user name="dfsp2-testconnector" password="1234" authorities="ROLE_ADMIN" />
				</ss:user-service>
			</ss:authentication-provider>
		</ss:authentication-manager>
	</spring:beans>

	<mule-ss:security-manager>
		<mule-ss:delegate-security-provider
			name="memory-provider" delegate-ref="authenticationManager" />
	</mule-ss:security-manager>
	
    <flow name="get:/:api-config">
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="metadata.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling getLedgerMetadata for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <logger level="DEBUG"
                message="Calling getLedgerMetadata for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <flow-ref name="getLedgerMetadata" doc:name="getLedgerMetadata"/>
        <logger level="INFO"
                message="Sending getLedgerMetadata response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <logger level="DEBUG"
                message="Sending getLedgerMetadata response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="metadata.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="metadata.start" endSnapKey="metadata.stop" category="l1p.interop-ilp-ledger.metadata.api" metricKey="MetadataGetTime" doc:name="Metrics Record"/>
        <!--<metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.empty-get.api" doc:name="metrics-count">-->
            <!--<metrics:metric-keys><metrics:metric-key>Emtpy:/:GetRequest</metrics:metric-key></metrics:metric-keys>-->
        <!--</metrics:inc-count>-->
    </flow>
    
    <flow name="get:/health:api-config">
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.health.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling getLedgerHealth for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <logger level="DEBUG"
                message="Calling getLedgerHealth for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <flow-ref name="getLedgerHealth" doc:name="call getLedgerMetadata"/>
        <logger level="INFO"
                message="Received getLedgerHealth response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <logger level="DEBUG"
                message="Received getLedgerHealth response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.health.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="get.health.start" endSnapKey="get.health.stop" category="l1p.interop-ilp-ledger.health.api" metricKey="HealthGetRequestTime" doc:name="Metrics Record"/>
        <!--<metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.health.api" doc:name="metrics-count">-->
            <!--<metrics:metric-keys><metrics:metric-key>HealthGetRequest</metrics:metric-key></metrics:metric-keys>-->
        <!--</metrics:inc-count>-->
    </flow>

    <flow name="get:/accounts:api-config">
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.accounts.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling getAccounts for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <logger level="DEBUG"
                message="Calling getAccounts for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <flow-ref name="getAccounts" doc:name="call getAccounts"/>
        <logger level="INFO"
                message="Received getAccounts response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <logger level="DEBUG"
                message="Received getAccounts response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.accounts.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="get.accounts.start" endSnapKey="get.accounts.stop" category="l1p.interop-ilp-ledger.accounts.api" metricKey="AccountsGetRequestTime" doc:name="Metrics Record"/>
        <!--<metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.accounts.api" doc:name="metrics-count">-->
            <!--<metrics:metric-keys><metrics:metric-key>AccountsGetRequest</metrics:metric-key></metrics:metric-keys>-->
        <!--</metrics:inc-count>-->
    </flow>
    
    <flow name="get:/accounts/{id}:api-config">
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.accounts-id.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling getAccount(#[id]) for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']"
                category="com.l1p.interop.dfsp.get-account-id" doc:name="logger"/>
        <logger level="DEBUG"
                message="Calling getAccount(#[id]) for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']: #[payload]"
                category="com.l1p.interop.dfsp.get-account-id" doc:name="logger"/>
        <flow-ref name="getAccount" doc:name="getAccount"/>
        <logger level="INFO"
                message="Received getAccount(#[id]) response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.inboundProperties.'http.status']"
                category="com.l1p.interop.dfsp.get-account-id" doc:name="logger"/>
        <logger level="DEBUG"
                message="Received getAccount(#[id]) response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.inboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.get-account-id" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.accounts-id.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="get.accounts-id.start" endSnapKey="get.accounts-id.stop" category="l1p.interop-ilp-ledger.accounts-id.api" metricKey="AccountsIdGetRequestTime" doc:name="Metrics Record"/>
        <!--<metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.accounts-id.api" doc:name="metrics-count">-->
            <!--<metrics:metric-keys><metrics:metric-key>AccountsIdGetRequest</metrics:metric-key></metrics:metric-keys>-->
        <!--</metrics:inc-count>-->
    </flow>
    
    <flow name="put:/accounts/{id}:api-config">
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.accounts-id.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling putAccount(#[id]) for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <logger level="DEBUG"
                message="Calling putAccount(#[id]) for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <flow-ref name="putAccount" doc:name="call putAccount"/>
        <logger level="INFO"
                message="Received putAccount(#[id]) response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <logger level="DEBUG"
                message="Received putAccount(#[id]) response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.accounts-id.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="put.accounts-id.start" endSnapKey="put.accounts-id.stop" category="l1p.interop-ilp-ledger.accounts-id.api" metricKey="AccountsIdPutRequestTime" doc:name="Metrics Record"/>
        <!--<metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.accounts-id.api" doc:name="metrics-count">-->
            <!--<metrics:metric-keys><metrics:metric-key>AccountsIdPutRequest</metrics:metric-key></metrics:metric-keys>-->
        <!--</metrics:inc-count>-->
    </flow>
    
    <flow name="put:/transfers/{id}:api-config">
    	<http:basic-security-filter realm="mule-realm" />
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.transfers.start" doc:name="SnapTime"/>
        <set-session-variable variableName="L1p-Trace-Id" value="#[ (message.inboundProperties.'L1p-Trace-Id' != null) ? (message.inboundProperties.'L1p-Trace-Id') : (message.inboundProperties.'http.uri.params'.id) ]" doc:name="Reset-L1p-Trace-Id"/>
        <logger level="INFO"
                message="Calling putTransfer(#[id]) for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <logger level="DEBUG"
                message="Calling putTransfer(#[id]) for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <flow-ref name="putTransfer" doc:name="call putTransfer"/>
        <logger level="INFO"
                message="Sending putTransfer(#[id])response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <logger level="DEBUG"
                message="Sending putTransfer(#[id])response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.transfers.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="put.transfers.start" endSnapKey="put.transfers.stop" category="l1p.interop-ilp-ledger.transfers.api" metricKey="TransfersPutRequestTime" doc:name="Metrics Record"/>
        <!--<metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.transfers.api" doc:name="metrics-count">-->
            <!--<metrics:metric-keys><metrics:metric-key>TransfersPutRequest</metrics:metric-key></metrics:metric-keys>-->
        <!--</metrics:inc-count>-->
    </flow>

    <flow name="get:/transfers/{id}:api-config">
    	<http:basic-security-filter realm="mule-realm" />
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.transfers.start" doc:name="SnapTime"/>
    	<set-session-variable variableName="L1p-Trace-Id" value="#[ (message.inboundProperties.'L1p-Trace-Id' != null) ? (message.inboundProperties.'L1p-Trace-Id') : (message.inboundProperties.'http.uri.params'.id) ]" doc:name="Reset-L1p-Trace-Id"/>
        <logger level="INFO"
                message="Calling getTransfer(#[id]) for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <logger level="DEBUG"
                message="Calling getTransfer(#[id]) for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <flow-ref name="getTransfer" doc:name="call getTransfer"/>
        <logger level="INFO"
                message="Sending getTransfer(#[id]) response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <logger level="DEBUG"
                message="Sending getTransfer(#[id]) response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.transfers.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="get.transfers.start" endSnapKey="get.transfers.stop" category="l1p.interop-ilp-ledger.transfers.api" metricKey="TransfersGetRequestTime" doc:name="Metrics Record"/>
        <!--<metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.transfers.api" doc:name="metrics-count">-->
            <!--<metrics:metric-keys><metrics:metric-key>TransfersGetRequest</metrics:metric-key></metrics:metric-keys>-->
        <!--</metrics:inc-count>-->
    </flow>
    
    <flow name="put:/transfers/{id}/fulfillment:api-config">
    	<http:basic-security-filter realm="mule-realm" />
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.transfers-fulfillment.start" doc:name="SnapTime"/>
    	<set-session-variable variableName="L1p-Trace-Id" value="#[ (message.inboundProperties.'L1p-Trace-Id' != null) ? (message.inboundProperties.'L1p-Trace-Id') : (message.inboundProperties.'http.uri.params'.id) ]" doc:name="Reset-L1p-Trace-Id"/>
        <logger level="INFO"
                message="Calling executeTransfer(#[id]) for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <logger level="DEBUG"
                message="Calling executeTransfer(#[id]) for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <flow-ref name="executeTransfer" doc:name="call executeTransfer"/>
        <logger level="INFO"
                message="Sending executeTransfer(#[id]) response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <logger level="DEBUG"
                message="Sending executeTransfer(#[id]) response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.transfers-fulfillment.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="put.transfers-fulfillment.start" endSnapKey="put.transfers-fulfillment.stop" category="l1p.interop-ilp-ledger.transfers-fulfillment.api" metricKey="TransfersFulfillmentPutRequestTime" doc:name="Metrics Record"/>
        <!--<metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.transfers-fulfillment.api" doc:name="metrics-count">-->
            <!--<metrics:metric-keys><metrics:metric-key>TransfersFulfillmentPutRequest</metrics:metric-key></metrics:metric-keys>-->
        <!--</metrics:inc-count>-->
    </flow>
    
    <flow name="get:/transfers/{id}/fulfillment:api-config">
    	<http:basic-security-filter realm="mule-realm" />
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.transfers.start" doc:name="SnapTime"/>
    	<set-session-variable variableName="L1p-Trace-Id" value="#[ (message.inboundProperties.'L1p-Trace-Id' != null) ? (message.inboundProperties.'L1p-Trace-Id') : (message.inboundProperties.'http.uri.params'.id) ]" doc:name="Reset-L1p-Trace-Id"/>
        <logger level="INFO"
                message="Calling getTransferFullfillment(#[id]) for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <logger level="DEBUG"
                message="Calling getTransferFullfillment(#[id]) for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <flow-ref name="getTransferFulfillment" doc:name="getTransferFulfillment"/>
        <logger level="INFO"
                message="Sending getTransferFulfillment(#[id]) response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <logger level="DEBUG"
                message="Sending getTransferFulfillment(#[id]) response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.transfers.stop" doc:name="SnapTime"/>
        <metrics:time config-ref="metricsConfig" beginSnapKey="get.transfers.start" endSnapKey="get.transfers.stop" category="l1p.interop-ilp-ledger.transfers.api" metricKey="TransfersGetRequestTime" doc:name="Metrics Record"/>
        <!--<metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.transfers.api" doc:name="metrics-count">-->
            <!--<metrics:metric-keys><metrics:metric-key>TransfersGetRequest</metrics:metric-key></metrics:metric-keys>-->
        <!--</metrics:inc-count>-->
    </flow>

    <flow name="put:/transfers/{id}/rejection:api-config">
    	<http:basic-security-filter realm="mule-realm" />
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.transfers-rejection.start" doc:name="SnapTime"/>
        <set-session-variable variableName="L1p-Trace-Id" value="#[ (message.inboundProperties.'L1p-Trace-Id' != null) ? (message.inboundProperties.'L1p-Trace-Id') : (message.inboundProperties.'http.uri.params'.id) ]" doc:name="Reset-L1p-Trace-Id"/>
        <logger level="INFO"
                message="Calling rejectTransfer(#[id]) for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <logger level="DEBUG"
                message="Calling rejectTransfer(#[id]) for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <flow-ref name="rejectTransfer" doc:name="call executeTransfer"/>
        <logger level="INFO"
                message="Received rejectTransfer(#[id]) response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <logger level="DEBUG"
                message="Received rejectTransfer(#[id]) response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.transfers-rejection.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="put.transfers-rejection.start" endSnapKey="put.transfers-rejection.stop" category="l1p.interop-ilp-ledger.transfers-rejection.api" metricKey="TransfersRejectionPutRequestTime" doc:name="Metrics Record"/>
        <!--<metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.transfers-rejection.api" doc:name="metrics-count">-->
            <!--<metrics:metric-keys><metrics:metric-key>TransfersRejectionPutRequest</metrics:metric-key></metrics:metric-keys>-->
        <!--</metrics:inc-count>-->
    </flow>
    
    <flow name="get:/connectors:api-config">
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.connectors.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling getConnectors for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <flow-ref name="getConnectors" doc:name="call getConnectors"/>
        <logger level="INFO"
                message="Received getConnectors response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <logger level="DEBUG"
                message="Received getConnectors response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.connectors.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="get.connectors.start" endSnapKey="get.connectors.stop" category="l1p.interop-ilp-ledger.connectors.api" metricKey="ConnectorsGetRequestTime" doc:name="Metrics Record"/>
        <!--<metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.connectors.api" doc:name="metrics-count">-->
            <!--<metrics:metric-keys><metrics:metric-key>ConnectorsGetRequest</metrics:metric-key></metrics:metric-keys>-->
        <!--</metrics:inc-count>-->
    </flow>
    
	<flow name="post:/messages:api-config">
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="post.message.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling post messages for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <logger level="DEBUG"
                message="Calling post messages for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <flow-ref name="postMessages" doc:name="call postMessages"/>
        <logger level="INFO"
                message="Received postMessages response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <logger level="DEBUG"
                message="Received postMessages response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="post.message.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="post.message.start" endSnapKey="post.message.stop" category="l1p.interop-ilp-ledger.message.api" metricKey="ConnectorsPostMessageTime" doc:name="Metrics Record"/>
        <!--<metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.connectors.api" doc:name="metrics-count">-->
            <!--<metrics:metric-keys><metrics:metric-key>ConnectorsGetRequest</metrics:metric-key></metrics:metric-keys>-->
        <!--</metrics:inc-count>-->
    </flow>
    
    <flow name="get:/auth_token:api-config">
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.auth_token.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Handling auth_token call.  L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <set-payload doc:name="Set Payload" value="{&quot;token&quot;:&quot;placeholder_9AtVZPN3t49Kx07stO813UHXv6pcES&quot;}"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.auth_token.stop" doc:name="SnapTime"/>
        <metrics:time config-ref="metricsConfig" beginSnapKey="get.auth_token.start" endSnapKey="get.auth_token.stop" category="l1p.interop-ilp-ledger.auth-token.api" metricKey="AuthTokenGetRequestTime" doc:name="Metrics Record"/>
        <!--<metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.api" doc:name="metrics-count">-->
            <!--<metrics:metric-keys><metrics:metric-key>AuthTokenGetRequest</metrics:metric-key></metrics:metric-keys>-->
        <!--</metrics:inc-count>-->
    </flow>
    
</mule>
