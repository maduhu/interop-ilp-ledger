<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:metrics="http://www.mulesoft.org/schema/mule/metrics"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
            http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
            http://www.mulesoft.org/schema/mule/metrics http://www.mulesoft.org/schema/mule/metrics/current/mule-metrics.xsd
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

    <flow name="get:/:api-config">
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get:/:.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling getLedgerMetadata for interopID=#[sessionVars.interopID]: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <flow-ref name="getLedgerMetadata" doc:name="call getLedgerMetadata"/>
        <logger level="INFO"
                message="Received getLedgerMetadata response for interopID=#[sessionVars.interopID], http.status=#[message.outboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get:/:.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="get:/:.start" endSnapKey="get:/:.stop" category="l1p.interop-ilp-ledger.empty-get.api" metricKey="Emtpy:/:RequestGetTime" doc:name="Metrics Record"/>
        <metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.empty-get.api" doc:name="metrics-count">
            <metrics:metric-keys><metrics:metric-key>Emtpy:/:GetRequest</metrics:metric-key></metrics:metric-keys>
        </metrics:inc-count>
    </flow>
    
    <flow name="get:/health:api-config">
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.health.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling getLedgerHealth for interopID=#[sessionVars.interopID]: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <flow-ref name="getLedgerHealth" doc:name="call getLedgerMetadata"/>
        <logger level="INFO"
                message="Received getLedgerHealth response for interopID=#[sessionVars.interopID], http.status=#[message.outboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.health.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="get.health.start" endSnapKey="get.health.stop" category="l1p.interop-ilp-ledger.health.api" metricKey="HealthGetRequestTime" doc:name="Metrics Record"/>
        <metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.health.api" doc:name="metrics-count">
            <metrics:metric-keys><metrics:metric-key>HealthGetRequest</metrics:metric-key></metrics:metric-keys>
        </metrics:inc-count>
    </flow>

    <flow name="get:/accounts:api-config">
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.accounts.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling getAccounts for interopID=#[sessionVars.interopID]: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <flow-ref name="getAccounts" doc:name="call getAccounts"/>
        <logger level="INFO"
                message="Received getAccounts response for interopID=#[sessionVars.interopID], http.status=#[message.outboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.accounts.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="get.accounts.start" endSnapKey="get.accounts.stop" category="l1p.interop-ilp-ledger.accounts.api" metricKey="AccountsGetRequestTime" doc:name="Metrics Record"/>
        <metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.accounts.api" doc:name="metrics-count">
            <metrics:metric-keys><metrics:metric-key>AccountsGetRequest</metrics:metric-key></metrics:metric-keys>
        </metrics:inc-count>
    </flow>
    
    <flow name="get:/accounts/{id}:api-config">
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.accounts-id.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling getAccount(#[id]) for interopID=#[sessionVars.interopID]: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <flow-ref name="getAccount" doc:name="call getAccount"/>
        <logger level="INFO"
                message="Received getAccount(#[id]) response for interopID=#[sessionVars.interopID], http.status=#[message.outboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.accounts-id.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="get.accounts-id.start" endSnapKey="get.accounts-id.stop" category="l1p.interop-ilp-ledger.accounts-id.api" metricKey="AccountsIdGetRequestTime" doc:name="Metrics Record"/>
        <metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.accounts-id.api" doc:name="metrics-count">
            <metrics:metric-keys><metrics:metric-key>AccountsIdGetRequest</metrics:metric-key></metrics:metric-keys>
        </metrics:inc-count>
    </flow>
    
    <flow name="put:/accounts/{id}:api-config">
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.accounts-id.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling putAccount(#[id]) for interopID=#[sessionVars.interopID]: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <flow-ref name="putAccount" doc:name="call putAccount"/>
        <logger level="INFO"
                message="Received putAccount(#[id]) response for interopID=#[sessionVars.interopID], http.status=#[message.outboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.accounts-id.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="put.accounts-id.start" endSnapKey="put.accounts-id.stop" category="l1p.interop-ilp-ledger.accounts-id.api" metricKey="AccountsIdPutRequestTime" doc:name="Metrics Record"/>
        <metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.accounts-id.api" doc:name="metrics-count">
            <metrics:metric-keys><metrics:metric-key>AccountsIdPutRequest</metrics:metric-key></metrics:metric-keys>
        </metrics:inc-count>
    </flow>

    <flow name="get:/transfers/{id}:api-config">
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.transfers.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling getTransfer(#[id]) for interopID=#[sessionVars.interopID]: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <flow-ref name="getTransfer" doc:name="call getTransfer"/>
        <logger level="INFO"
                message="Received getTransfer(#[id]) response for interopID=#[sessionVars.interopID], http.status=#[message.outboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.transfers.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="get.transfers.start" endSnapKey="get.transfers.stop" category="l1p.interop-ilp-ledger.transfers.api" metricKey="TransfersGetRequestTime" doc:name="Metrics Record"/>
        <metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.transfers.api" doc:name="metrics-count">
            <metrics:metric-keys><metrics:metric-key>TransfersGetRequest</metrics:metric-key></metrics:metric-keys>
        </metrics:inc-count>
    </flow>
    
    <flow name="put:/transfers/{id}:api-config">
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.transfers.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling putTransfer(#[id]) for interopID=#[sessionVars.interopID]: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <flow-ref name="putTransfer" doc:name="call putTransfer"/>
        <logger level="INFO"
                message="Received putTransfer(#[id])response for interopID=#[sessionVars.interopID], http.status=#[message.outboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.transfers.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="put.transfers.start" endSnapKey="put.transfers.stop" category="l1p.interop-ilp-ledger.transfers.api" metricKey="TransfersPutRequestTime" doc:name="Metrics Record"/>
        <metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.transfers.api" doc:name="metrics-count">
            <metrics:metric-keys><metrics:metric-key>TransfersPutRequest</metrics:metric-key></metrics:metric-keys>
        </metrics:inc-count>
    </flow>
    
    <flow name="put:/transfers/{id}/fulfillment:api-config">
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.transfers-fulfillment.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling executeTransfer(#[id]) for interopID=#[sessionVars.interopID]: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <flow-ref name="executeTransfer" doc:name="call executeTransfer"/>
        <logger level="INFO"
                message="Received executeTransfer(#[id]) response for interopID=#[sessionVars.interopID], http.status=#[message.outboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.transfers-fulfillment.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="put.transfers-fulfillment.start" endSnapKey="put.transfers-fulfillment.stop" category="l1p.interop-ilp-ledger.transfers-fulfillment.api" metricKey="TransfersFulfillmentPutRequestTime" doc:name="Metrics Record"/>
        <metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.transfers-fulfillment.api" doc:name="metrics-count">
            <metrics:metric-keys><metrics:metric-key>TransfersFulfillmentPutRequest</metrics:metric-key></metrics:metric-keys>
        </metrics:inc-count>
    </flow>

    <flow name="put:/transfers/{id}/rejection:api-config">
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.transfers-rejection.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling rejectTransfer(#[id]) for interopID=#[sessionVars.interopID]: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <flow-ref name="rejectTransfer" doc:name="call executeTransfer"/>
        <logger level="INFO"
                message="Received rejectTransfer(#[id]) response for interopID=#[sessionVars.interopID], http.status=#[message.outboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.transfers-rejection.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="put.transfers-rejection.start" endSnapKey="put.transfers-rejection.stop" category="l1p.interop-ilp-ledger.transfers-rejection.api" metricKey="TransfersRejectionPutRequestTime" doc:name="Metrics Record"/>
        <metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.transfers-rejection.api" doc:name="metrics-count">
            <metrics:metric-keys><metrics:metric-key>TransfersRejectionPutRequest</metrics:metric-key></metrics:metric-keys>
        </metrics:inc-count>
    </flow>
    <flow name="get:/connectors:api-config">
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.connectors.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling getConnectors for interopID=#[sessionVars.interopID]: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <flow-ref name="getConnectors" doc:name="call getConnectors"/>
        <logger level="INFO"
                message="Received getConnectors response for interopID=#[sessionVars.interopID], http.status=#[message.outboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.connectors.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="get.connectors.start" endSnapKey="get.connectors.stop" category="l1p.interop-ilp-ledger.connectors.api" metricKey="ConnectorsGetRequestTime" doc:name="Metrics Record"/>
        <metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.connectors.api" doc:name="metrics-count">
            <metrics:metric-keys><metrics:metric-key>ConnectorsGetRequest</metrics:metric-key></metrics:metric-keys>
        </metrics:inc-count>
    </flow>
	<flow name="post:/messages:api-config">
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.connectors.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling post messages for interopID=#[sessionVars.interopID]: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <flow-ref name="postMessages" doc:name="call postMessages"/>
        <logger level="INFO"
                message="Received postMessages response for interopID=#[sessionVars.interopID], http.status=#[message.outboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.connectors.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="get.connectors.start" endSnapKey="get.connectors.stop" category="l1p.interop-ilp-ledger.connectors.api" metricKey="ConnectorsGetRequestTime" doc:name="Metrics Record"/>
        <metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.connectors.api" doc:name="metrics-count">
            <metrics:metric-keys><metrics:metric-key>ConnectorsGetRequest</metrics:metric-key></metrics:metric-keys>
        </metrics:inc-count>
    </flow>
</mule>
