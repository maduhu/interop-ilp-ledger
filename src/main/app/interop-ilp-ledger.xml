<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:tls="http://www.mulesoft.org/schema/mule/tls"
      xmlns:tracking="http://www.mulesoft.org/schema/mule/ce/tracking"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:metrics="http://www.mulesoft.org/schema/mule/metrics"
      xmlns:mule-ss="http://www.mulesoft.org/schema/mule/spring-security"
      xmlns:ss="http://www.springframework.org/schema/security"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/metrics http://www.mulesoft.org/schema/mule/metrics/current/mule-metrics.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/spring-security http://www.mulesoft.org/schema/mule/spring-security/3.1/mule-spring-security.xsd
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/ce/tracking http://www.mulesoft.org/schema/mule/ce/tracking/current/mule-tracking-ce.xsd
http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd
http://www.mulesoft.org/schema/mule/https http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">

	<spring:beans>
		<ss:authentication-manager alias="authenticationManager">
			<ss:authentication-provider>
				<ss:user-service id="userService">
					<ss:user name="admin" password="admin" authorities="ROLE_ADMIN" />
					<ss:user name="bob" password="1234" authorities="ROLE_ADMIN" />
					<ss:user name="alice" password="1234" authorities="ROLE_ADMIN" />
					<ss:user name="dfsp1-testconnector" password="1234" authorities="ROLE_ADMIN" />
					<ss:user name="dfsp2-testconnector" password="1234" authorities="ROLE_ADMIN" />
				</ss:user-service>
			</ss:authentication-provider>
		</ss:authentication-manager>
        <spring:bean id="transferQueue" class="com.l1p.interop.ilp.ledger.queue.TransferQueue">
            <spring:constructor-arg value="1000"/><!-- Prepare Limit -->
            <spring:constructor-arg value="1000"/><!-- Cancel Limit -->
        </spring:bean>
	</spring:beans>

	<mule-ss:security-manager name="muleSecurityManager">
		<mule-ss:delegate-security-provider
			name="memory-provider" delegate-ref="authenticationManager" />
	</mule-ss:security-manager>
	
    <sub-flow name="common_Flow">
        <logger message="This flow was called directly, not through API Kit router  :: ${ilp-ledger-adapter.basePath}" level="INFO" doc:name="Logger"/>
        <set-variable variableName="id" value="#[(message.inboundProperties.'http.uri.params'.id == null) ?  -1 : message.inboundProperties.'http.uri.params'.id]" doc:name="Variable - set ID from uri parameter"/>
        <set-session-variable variableName="L1p-Trace-Id" value="#[ (message.inboundProperties.'L1p-Trace-Id' != null) ? (message.inboundProperties.'L1p-Trace-Id') : (message.inboundProperties.'http.uri.params'.id) ]" doc:name="Reset-L1p-Trace-Id"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="apikit.start" doc:name="SnapTime Start"/>
        
        <!-- <custom-transformer class="com.l1p.interop.ilp.ledger.BasicAuthCredentialsTransformer" doc:name="Basic Auth Transformer"/> -->
        <logger level="INFO"
                message="Received request with L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'] at path=#[message.inboundProperties.'http.request.path'], method=#[message.inboundProperties.'http.method'], Content-Type=#[message.inboundProperties.'Content-Type']"
                category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>
        <object-to-string-transformer doc:name="Object to String"/>
    </sub-flow>
    
	
    <flow name="get:/:api-config">
        <http:listener config-ref="api-httpListenerConfig" path="${ilp-ledger-adapter.basePath}/" allowedMethods="GET" doc:name="HTTP"/>
        <flow-ref name="common_Flow" doc:name="common_Flow"/>
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="metadata.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling getLedgerMetadata for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']"
                category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>
        <flow-ref name="getLedgerMetadata" doc:name="getLedgerMetadata"/>
        <logger level="INFO"
                message="Sending getLedgerMetadata response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']"
                category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="metadata.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="metadata.start" endSnapKey="metadata.stop" category="l1p.interop-ilp-ledger.metadata.api" metricKey="MetadataGetTime" doc:name="Metrics Record"/>
        <metrics:time config-ref="metricsConfig" beginSnapKey="apikit.start" endSnapKey="metadata.stop"   category="l1p.interop-ilp-ledger.metadata.api" metricKey="MetadataGetTimeWithFullApiKitGetTime" doc:name="Metrics Record - Complete API call"/>
        <exception-strategy ref="interop-ilp-ledgerCatch_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>
    
    <flow name="get:/health:api-config">
        <http:listener config-ref="api-httpListenerConfig" path="${ilp-ledger-adapter.basePath}/health" doc:name="HTTP" allowedMethods="GET"/>
        <flow-ref name="common_Flow" doc:name="common_Flow"/>
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.health.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling getLedgerHealth for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']"
                category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>
        <flow-ref name="getLedgerHealth" doc:name="call getLedgerMetadata"/>
        <logger level="INFO"
                message="Received getLedgerHealth response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']"
                category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.health.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="get.health.start" endSnapKey="get.health.stop" category="l1p.interop-ilp-ledger.health.api" metricKey="HealthGetRequestTime" doc:name="Metrics Record"/>
        <metrics:time config-ref="metricsConfig" beginSnapKey="apikit.start" endSnapKey="get.health.stop"     category="l1p.interop-ilp-ledger.health.api" metricKey="HealthGetRequestTimeWithFullApiKitGetTime" doc:name="Metrics Record - Complete API call"/>
  
  		<exception-strategy ref="interop-ilp-ledgerCatch_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>

    <flow name="get:/accounts:api-config">
        <http:listener config-ref="api-httpListenerConfig" path="${ilp-ledger-adapter.basePath}/accounts" doc:name="HTTP"/>
        <flow-ref name="common_Flow" doc:name="common_Flow"/>
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.accounts.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling getAccounts for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']"
                category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>
        <flow-ref name="getAccounts" doc:name="call getAccounts"/>
        <logger level="INFO"
                message="Received getAccounts response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']"
                category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.accounts.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="get.accounts.start" endSnapKey="get.accounts.stop" category="l1p.interop-ilp-ledger.accounts.api" metricKey="AccountsGetRequestTime" doc:name="Metrics Record"/>
        <metrics:time config-ref="metricsConfig" beginSnapKey="apikit.start" endSnapKey="get.accounts.stop"       category="l1p.interop-ilp-ledger.accounts.api" metricKey="AccountsGetRequestTimeWithFullApiKitGetTime" doc:name="Metrics Record - Complete API call"/>
    	<exception-strategy ref="interop-ilp-ledgerCatch_Exception_Strategy" doc:name="Reference Exception Strategy"/>
  	</flow>
    
    <flow name="get:/accounts/{id}:api-config">
        <http:listener config-ref="api-httpListenerConfig" path="${ilp-ledger-adapter.basePath}/accounts/{id}" allowedMethods="GET" doc:name="HTTP"/>
        <flow-ref name="common_Flow" doc:name="common_Flow"/>
        <http:basic-security-filter realm="mule-realm" />
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.accounts-id.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling getAccount(#[id]) for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']"
                category="com.l1p.interop.ilp.ledger.get-account-id" doc:name="logger"/>
        <flow-ref name="getAccount" doc:name="getAccount"/>
        <logger level="INFO"
                message="Received getAccount(#[id]) response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.inboundProperties.'http.status']"
                category="com.l1p.interop.ilp.ledger.get-account-id" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.accounts-id.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="get.accounts-id.start" endSnapKey="get.accounts-id.stop" category="l1p.interop-ilp-ledger.accounts-id.api" metricKey="AccountsIdGetRequestTime" doc:name="Metrics Record"/>
        <metrics:time config-ref="metricsConfig" beginSnapKey="apikit.start" endSnapKey="get.accounts-id.stop"          category="l1p.interop-ilp-ledger.accounts-id.api" metricKey="AccountsIdGetRequestTimeWithFullApiKitGetTime" doc:name="Metrics Record - Complete API call"/>
        <exception-strategy ref="interop-ilp-ledgerCatch_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>
    
    <flow name="put:/accounts/{id}:api-config">
        <http:listener config-ref="api-httpListenerConfig" path="${ilp-ledger-adapter.basePath}/accounts/{id}" allowedMethods="PUT" doc:name="HTTP"/>
        <flow-ref name="common_Flow" doc:name="common_Flow"/>
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.accounts-id.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling putAccount(#[id]) for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']"
                category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>
        <flow-ref name="putAccount" doc:name="call putAccount"/>
        <logger level="INFO"
                message="Received putAccount(#[id]) response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']"
                category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.accounts-id.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="put.accounts-id.start" endSnapKey="put.accounts-id.stop" category="l1p.interop-ilp-ledger.accounts-id.api" metricKey="AccountsIdPutRequestTime" doc:name="Metrics Record"/>
        <metrics:time config-ref="metricsConfig" beginSnapKey="apikit.start" endSnapKey="put.accounts-id.stop"          category="l1p.interop-ilp-ledger.accounts-id.api" metricKey="AccountsIdPutRequestTimeWithFullApiKitGetTime" doc:name="Metrics Record - Complete API call"/>
        <exception-strategy ref="interop-ilp-ledgerCatch_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>
    
    <flow name="put:/transfers/{id}:api-config">
        <http:listener config-ref="api-httpListenerConfig" path="${ilp-ledger-adapter.basePath}/transfers/{id}" allowedMethods="PUT" doc:name="HTTP"/>
        <flow-ref name="common_Flow" doc:name="common_Flow"/>
    	<http:basic-security-filter realm="mule-realm" />
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.transfers.start" doc:name="SnapTime"/>

        <logger level="INFO"
                message="Calling putTransferEnqueue(#[id]) for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']"
                category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>
        <flow-ref name="putTransferEnqueue" doc:name="call putTransfer"/>
        <!--<logger level="INFO"-->
                <!--message="Sending putTransfer(#[id])response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']"-->
                <!--category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>-->
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.transfers.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="put.transfers.start" endSnapKey="put.transfers.stop" category="l1p.interop-ilp-ledger.transfers.api" metricKey="TransfersPutRequestTime" doc:name="Metrics Record"/>
        <metrics:time config-ref="metricsConfig" beginSnapKey="apikit.start" endSnapKey="put.transfers.stop"        category="l1p.interop-ilp-ledger.transfers.api" metricKey="TransfersPutRequestTimeWithFullApiKitGetTime" doc:name="Metrics Record - Complete API call"/>
        <exception-strategy ref="interop-ilp-ledgerCatch_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>

    <flow name="get:/transfers/{id}:api-config">
        <http:listener config-ref="api-httpListenerConfig" path="${ilp-ledger-adapter.basePath}/transfers/{id}" allowedMethods="GET" doc:name="HTTP"/>
        <flow-ref name="common_Flow" doc:name="common_Flow"/>
    	<http:basic-security-filter realm="mule-realm" />
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.transfers.start" doc:name="SnapTime"/>
    	<logger level="INFO"
                message="Calling getTransfer(#[id]) for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']"
                category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>
        <flow-ref name="getTransfer" doc:name="call getTransfer"/>
        <logger level="INFO"
                message="Sending getTransfer(#[id]) response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']"
                category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.transfers.stop" doc:name="SnapTime"/>
        <metrics:time config-ref="metricsConfig" beginSnapKey="get.transfers.start" endSnapKey="get.transfers.stop" category="l1p.interop-ilp-ledger.transfers.api" metricKey="TransfersGetRequestTime" doc:name="Metrics Record"/>
        <metrics:time config-ref="metricsConfig" beginSnapKey="apikit.start" endSnapKey="get.transfers.stop"        category="l1p.interop-ilp-ledger.transfers.api" metricKey="TransfersGetRequestTimeWithFullApiKitGetTime" doc:name="Metrics Record - Complete API call"/>
        <exception-strategy ref="interop-ilp-ledgerCatch_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>
    
    <flow name="put:/transfers/{id}/fulfillment:api-config">
        <http:listener config-ref="api-httpListenerConfig" path="${ilp-ledger-adapter.basePath}/transfers/{id}/fulfillment" allowedMethods="PUT" doc:name="HTTP"/>
        <flow-ref name="common_Flow" doc:name="common_Flow"/>
    	<http:basic-security-filter realm="mule-realm" />
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.transfers-fulfillment.start" doc:name="SnapTime"/>
    	<logger level="INFO"
                message="Calling executeTransferEnqueue(#[id]) for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']"
                category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>
        <flow-ref name="executeTransferEnqueue" doc:name="executeTransfer"/>
        <!--<logger level="INFO"-->
                <!--message="Sending executeTransfer(#[id]) response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']"-->
                <!--category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>-->
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.transfers-fulfillment.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="put.transfers-fulfillment.start" endSnapKey="put.transfers-fulfillment.stop" category="l1p.interop-ilp-ledger.transfers-fulfillment.api" metricKey="TransfersFulfillmentPutRequestTime" doc:name="Metrics Record"/>
        <metrics:time config-ref="metricsConfig" beginSnapKey="apikit.start" endSnapKey="put.transfers-fulfillment.stop" category="l1p.interop-ilp-ledger.transfers-fulfillment.api" metricKey="TransfersFulfillmentPutRequestTimeWithFullApiKitGetTime" doc:name="Metrics Record - Complete API call"/>
        <exception-strategy ref="interop-ilp-ledgerCatch_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>
    
    <flow name="get:/transfers/{id}/fulfillment:api-config">
        <http:listener config-ref="api-httpListenerConfig" path="${ilp-ledger-adapter.basePath}/transfers/{id}/fulfillment" allowedMethods="GET" doc:name="HTTP"/>
        <flow-ref name="common_Flow" doc:name="common_Flow"/>
    	<http:basic-security-filter realm="mule-realm" />
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.transfers.start" doc:name="SnapTime"/>
    	<logger level="INFO"
                message="Calling getTransferFullfillment(#[id]) for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']"
                category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>
        <flow-ref name="getTransferFulfillment" doc:name="getTransferFulfillment"/>
        <logger level="INFO"
                message="Sending getTransferFulfillment(#[id]) response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']"
                category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.transfers.stop" doc:name="SnapTime"/>
        <metrics:time config-ref="metricsConfig" beginSnapKey="get.transfers.start" endSnapKey="get.transfers.stop" category="l1p.interop-ilp-ledger.transfers.api" metricKey="TransfersGetRequestTime" doc:name="Metrics Record"/>
        <metrics:time config-ref="metricsConfig" beginSnapKey="apikit.start" endSnapKey="get.transfers.stop"        category="l1p.interop-ilp-ledger.transfers.api" metricKey="TransfersGetRequestTimeWithFullApiKitGetTime" doc:name="Metrics Record - Complete API call"/>
        <exception-strategy ref="interop-ilp-ledgerCatch_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>

    <flow name="put:/transfers/{id}/rejection:api-config">
        <http:listener config-ref="api-httpListenerConfig" path="${ilp-ledger-adapter.basePath}/transfers/{id}/rejection" allowedMethods="PUT" doc:name="HTTP"/>
        <flow-ref name="common_Flow" doc:name="common_Flow"/>
    	<http:basic-security-filter realm="mule-realm" />
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.transfers-rejection.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling rejectTransferEnqueue(#[id]) for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']"
                category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>
        <flow-ref name="rejectTransferEnqueue" doc:name="call executeTransfer"/>
        <!--<logger level="INFO"-->
                <!--message="Received rejectTransfer(#[id]) response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']"-->
                <!--category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>-->
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.transfers-rejection.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="put.transfers-rejection.start" endSnapKey="put.transfers-rejection.stop" category="l1p.interop-ilp-ledger.transfers-rejection.api" metricKey="TransfersRejectionPutRequestTime" doc:name="Metrics Record"/>
        <metrics:time config-ref="metricsConfig" beginSnapKey="apikit.start" endSnapKey="put.transfers-rejection.stop"                  category="l1p.interop-ilp-ledger.transfers-rejection.api" metricKey="TransfersRejectionPutRequestTimeWithFullApiKitGetTime" doc:name="Metrics Record - Complete API call"/>
        <exception-strategy ref="interop-ilp-ledgerCatch_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>
    
    <flow name="get:/connectors:api-config">
        <http:listener config-ref="api-httpListenerConfig" path="${ilp-ledger-adapter.basePath}/connectors" allowedMethods="GET" doc:name="HTTP"/>
        <flow-ref name="common_Flow" doc:name="common_Flow"/>
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.connectors.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling getConnectors for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']"
                category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>
        <flow-ref name="getConnectors" doc:name="getConnectors"/>
        <logger level="INFO"
                message="Received getConnectors response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']"
                category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.connectors.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="get.connectors.start" endSnapKey="get.connectors.stop" category="l1p.interop-ilp-ledger.connectors.api" metricKey="ConnectorsGetRequestTime" doc:name="Metrics Record"/>
        <metrics:time config-ref="metricsConfig" beginSnapKey="apikit.start" endSnapKey="get.connectors.stop"         category="l1p.interop-ilp-ledger.connectors.api" metricKey="ConnectorsGetRequestTimeWithFullApiKitGetTime" doc:name="Metrics Record - Complete API call"/>
        <exception-strategy ref="interop-ilp-ledgerCatch_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>
    
	<flow name="post:/messages:api-config">
        <http:listener config-ref="api-httpListenerConfig" path="${ilp-ledger-adapter.basePath}/messages" allowedMethods="POST" doc:name="HTTP"/>
        <flow-ref name="common_Flow" doc:name="common_Flow"/>
        <http:basic-security-filter realm="mule-realm" />
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="post.message.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling post messages for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']"
                category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>
        <flow-ref name="postMessages" doc:name="postMessages"/>
        <logger level="INFO"
                message="Received postMessages response for L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'], http.status=#[message.outboundProperties.'http.status']"
                category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="post.message.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="post.message.start" endSnapKey="post.message.stop" category="l1p.interop-ilp-ledger.message.api" metricKey="ConnectorsPostMessageTime" doc:name="Metrics Record"/>
        <metrics:time config-ref="metricsConfig" beginSnapKey="apikit.start" endSnapKey="post.message.stop"       category="l1p.interop-ilp-ledger.message.api" metricKey="ConnectorsPostMessageTimeWithFullApiKitGetTime" doc:name="Metrics Record - Complete API call"/>
        <exception-strategy ref="interop-ilp-ledgerCatch_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>
    
    <flow name="get:/auth_token:api-config">
        <http:listener config-ref="api-httpListenerConfig" path="${ilp-ledger-adapter.basePath}/auth_token" allowedMethods="GET" doc:name="HTTP"/>
        <flow-ref name="common_Flow" doc:name="common_Flow"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.auth_token.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Handling auth_token call.  L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']"
                category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>
        <set-payload doc:name="Set Payload" value="{&quot;token&quot;:&quot;placeholder_9AtVZPN3t49Kx07stO813UHXv6pcES&quot;}"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.auth_token.stop" doc:name="SnapTime"/>
        <metrics:time config-ref="metricsConfig" beginSnapKey="get.auth_token.start" endSnapKey="get.auth_token.stop" category="l1p.interop-ilp-ledger.auth-token.api" metricKey="AuthTokenGetRequestTime" doc:name="Metrics Record"/>
        <metrics:time config-ref="metricsConfig" beginSnapKey="apikit.start" endSnapKey="get.auth_token.stop"         category="l1p.interop-ilp-ledger.auth-token.api" metricKey="AuthTokenGetRequestTimeWithFullApiKitGetTime" doc:name="Metrics Record - Complete API call"/>
        <exception-strategy ref="interop-ilp-ledgerCatch_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>
    
    <catch-exception-strategy name="interop-ilp-ledgerCatch_Exception_Strategy">
        <set-property propertyName="Content-Type" value="application/json" doc:name="Property - content-type"/>
        <set-property propertyName="http.status" value="501" doc:name="Property - http status"/>
		<set-session-variable variableName="errorMessageId" value="Transformer Messaging Exception" doc:name="set-errorMessageId"/>
		<transformer ref="ExceptionTransformer" doc:name="Exception Transformer"/>
    </catch-exception-strategy>
    
</mule>
