<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:metrics="http://www.mulesoft.org/schema/mule/metrics"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/metrics http://www.mulesoft.org/schema/mule/metrics/current/mule-metrics.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

    <flow name="get:/:test-api-config">
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get:/:.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling getLedgerMetadata for interopID=#[sessionVars.interopID]: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <set-payload value="{
  &quot;currency_code&quot;: null,
  &quot;currency_symbol&quot;: null,
  &quot;condition_sign_public_key&quot;: &quot;&quot;,
  &quot;notification_sign_public_key&quot;: &quot;&quot;,
  &quot;urls&quot;: {
    &quot;transfer&quot;: &quot;http://ec2-35-163-249-3.us-west-2.compute.amazonaws.com:8088/ledger/transfers/:id&quot;,
    &quot;transfer_fulfillment&quot;: &quot;http://ec2-35-163-249-3.us-west-2.compute.amazonaws.com:8088/ledger/transfers/:id/fulfillment&quot;,
    &quot;transfer_rejection&quot;: &quot;http://ec2-35-163-249-3.us-west-2.compute.amazonaws.com:8088/ledger/transfers/:id/rejection&quot;,
    &quot;transfer_state&quot;: &quot;http://ec2-35-163-249-3.us-west-2.compute.amazonaws.com:8088/ledger/transfers/:id/state&quot;,
    &quot;accounts&quot;: &quot;http://ec2-35-163-249-3.us-west-2.compute.amazonaws.com:8088/ledger/accounts&quot;,
    &quot;account&quot;: &quot;http://ec2-35-163-249-3.us-west-2.compute.amazonaws.com:8088/ledger/accounts/:name&quot;,
    &quot;account_transfers&quot;: &quot;ws://ec2-35-163-249-3.us-west-2.compute.amazonaws.com:8014/ledger/accounts/:name/transfers&quot;,
    &quot;subscription&quot;: &quot;http://ec2-35-163-249-3.us-west-2.compute.amazonaws.com:8014/ledger/subscriptions/:id&quot;
  },
  &quot;precision&quot;: 10,
  &quot;scale&quot;: 2
}" doc:name="Set Payload"/>
        <logger level="INFO"
                message="Received getLedgerMetadata response for interopID=#[sessionVars.interopID], http.status=#[message.inboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get:/:.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="get:/:.start" endSnapKey="get:/:.stop" category="l1p.interop-ilp-ledger.empty-get.api" metricKey="Emtpy:/:RequestGetTime" doc:name="Metrics Record"/>
        <metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.empty-get.api" doc:name="metrics-count">
            <metrics:metric-keys><metrics:metric-key>Emtpy:/:GetRequest</metrics:metric-key></metrics:metric-keys>
        </metrics:inc-count>
    </flow>
    
    <flow name="get:/health:test-api-config">
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.health.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling getLedgerHealth for interopID=#[sessionVars.interopID]: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <set-payload value="{}" doc:name="Set Payload"/>
        <logger level="INFO"
                message="Received getLedgerHealth response for interopID=#[sessionVars.interopID], http.status=#[message.outboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.health.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="get.health.start" endSnapKey="get.health.stop" category="l1p.interop-ilp-ledger.health.api" metricKey="HealthGetRequestTime" doc:name="Metrics Record"/>
        <metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.health.api" doc:name="metrics-count">
            <metrics:metric-keys><metrics:metric-key>HealthGetRequest</metrics:metric-key></metrics:metric-keys>
        </metrics:inc-count>
    </flow>

    <flow name="get:/accounts:test-api-config">
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.accounts.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling getAccounts for interopID=#[sessionVars.interopID]: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <set-payload value="{}" doc:name="Set Payload"/>
        <logger level="INFO"
                message="Received getAccounts response for interopID=#[sessionVars.interopID], http.status=#[message.outboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.accounts.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="get.accounts.start" endSnapKey="get.accounts.stop" category="l1p.interop-ilp-ledger.accounts.api" metricKey="AccountsGetRequestTime" doc:name="Metrics Record"/>
        <metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.accounts.api" doc:name="metrics-count">
            <metrics:metric-keys><metrics:metric-key>AccountsGetRequest</metrics:metric-key></metrics:metric-keys>
        </metrics:inc-count>
    </flow>
    
    <flow name="get:/accounts/{id}:test-api-config">
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.accounts-id.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling getAccount(#[id]) for interopID=#[sessionVars.interopID]: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <set-payload value="{
  &quot;id&quot;: &quot;http://ec2-35-163-249-3.us-west-2.compute.amazonaws.com:8088/ledger/accounts/bob&quot;,
  &quot;name&quot;: &quot;bob&quot;,
  &quot;balance&quot;: &quot;1056.00&quot;,
  &quot;currencyCode&quot;: &quot;USD&quot;,
  &quot;currencySymbol&quot;: &quot;$&quot;,
  &quot;is_disabled&quot;: &quot;1&quot;,
  &quot;ledger&quot;: &quot;http://ec2-35-163-249-3.us-west-2.compute.amazonaws.com:8088/ledger&quot;
}" doc:name="Set Payload"/>
        <logger level="INFO"
                message="Received getAccount(#[id]) response for interopID=#[sessionVars.interopID], http.status=#[message.inboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.accounts-id.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="get.accounts-id.start" endSnapKey="get.accounts-id.stop" category="l1p.interop-ilp-ledger.accounts-id.api" metricKey="AccountsIdGetRequestTime" doc:name="Metrics Record"/>
        <metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.accounts-id.api" doc:name="metrics-count">
            <metrics:metric-keys><metrics:metric-key>AccountsIdGetRequest</metrics:metric-key></metrics:metric-keys>
        </metrics:inc-count>
    </flow>
    
    <flow name="put:/accounts/{id}:test-api-config">
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.accounts-id.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling putAccount(#[id]) for interopID=#[sessionVars.interopID]: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <set-payload value="{
  &quot;id&quot;: &quot;http://ec2-35-163-231-111.us-west-2.compute.amazonaws.com:8014/ledger/accounts/john&quot;,
  &quot;name&quot;: &quot;john&quot;,
  &quot;balance&quot;: &quot;100.00&quot;,
  &quot;currency&quot;: &quot;USD&quot;,
  &quot;is_disabled&quot;: false
}" doc:name="Set Payload"/>
        <logger level="INFO"
                message="Received putAccount(#[id]) response for interopID=#[sessionVars.interopID], http.status=#[message.inboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.accounts-id.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="put.accounts-id.start" endSnapKey="put.accounts-id.stop" category="l1p.interop-ilp-ledger.accounts-id.api" metricKey="AccountsIdPutRequestTime" doc:name="Metrics Record"/>
        <metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.accounts-id.api" doc:name="metrics-count">
            <metrics:metric-keys><metrics:metric-key>AccountsIdPutRequest</metrics:metric-key></metrics:metric-keys>
        </metrics:inc-count>
    </flow>

    <flow name="get:/transfers/{id}:test-api-config">
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.transfers.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling getTransfer(#[id]) for interopID=#[sessionVars.interopID]: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <set-payload doc:name="Set Payload" value="{&quot;id&quot;:&quot;http://usd-ledger.example/transfers/3a2a1d9e-8640-4d2d-b06c-84f2cd613204&quot;,&quot;ledger&quot;:&quot;http://usd-ledger.example&quot;,&quot;debits&quot;:[{&quot;account&quot;:&quot;http://usd-ledger.example/accounts/alice&quot;,&quot;amount&quot;:&quot;50&quot;,&quot;authorized&quot;:true}],&quot;credits&quot;:[{&quot;account&quot;:&quot;http://usd-ledger.example/accounts/bob&quot;,&quot;amount&quot;:&quot;50&quot;}],&quot;execution_condition&quot;:&quot;cc:0:3:8ZdpKBDUV-KX_OnFZTsCWB_5mlCFI3DynX5f5H2dN-Y:2&quot;,&quot;expires_at&quot;:&quot;2015-06-16T00:00:01.000Z&quot;,&quot;state&quot;:&quot;executed&quot;,&quot;timeline&quot;:{&quot;prepared_at&quot;:&quot;2015-06-16T00:00:00.500Z&quot;,&quot;executed_at&quot;:&quot;2015-06-16T00:00:00.999Z&quot;}}"/>
        <logger level="INFO"
                message="Received getTransfer(#[id]) response for interopID=#[sessionVars.interopID], http.status=#[message.outboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.transfers.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="get.transfers.start" endSnapKey="get.transfers.stop" category="l1p.interop-ilp-ledger.transfers.api" metricKey="TransfersGetRequestTime" doc:name="Metrics Record"/>
        <metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.transfers.api" doc:name="metrics-count">
            <metrics:metric-keys><metrics:metric-key>TransfersGetRequest</metrics:metric-key></metrics:metric-keys>
        </metrics:inc-count>
    </flow>
    
    <flow name="put:/transfers/{id}:test-api-config">
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.transfers.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling putTransfer(#[id]) for interopID=#[sessionVars.interopID]: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <set-payload doc:name="Set Payload" value="{&quot;id&quot;:&quot;http://usd-ledger.example/transfers/3a2a1d9e-8640-4d2d-b06c-84f2cd613204&quot;,&quot;ledger&quot;:&quot;http://usd-ledger.example&quot;,&quot;debits&quot;:[{&quot;account&quot;:&quot;http://usd-ledger.example/accounts/alice&quot;,&quot;amount&quot;:&quot;50&quot;,&quot;authorized&quot;:true}],&quot;credits&quot;:[{&quot;account&quot;:&quot;http://usd-ledger.example/accounts/bob&quot;,&quot;amount&quot;:&quot;50&quot;}],&quot;execution_condition&quot;:&quot;cc:0:3:8ZdpKBDUV-KX_OnFZTsCWB_5mlCFI3DynX5f5H2dN-Y:2&quot;,&quot;expires_at&quot;:&quot;2015-06-16T00:00:01.000Z&quot;,&quot;state&quot;:&quot;prepared&quot;}"></set-payload>
        <logger level="INFO"
                message="Received putTransfer(#[id])response for interopID=#[sessionVars.interopID], http.status=#[message.outboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.transfers.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="put.transfers.start" endSnapKey="put.transfers.stop" category="l1p.interop-ilp-ledger.transfers.api" metricKey="TransfersPutRequestTime" doc:name="Metrics Record"/>
        <metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.transfers.api" doc:name="metrics-count">
            <metrics:metric-keys><metrics:metric-key>TransfersPutRequest</metrics:metric-key></metrics:metric-keys>
        </metrics:inc-count>
    </flow>
    
    <flow name="put:/transfers/{id}/fulfillment:test-api-config">
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.transfers-fulfillment.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling executeTransfer(#[id]) for interopID=#[sessionVars.interopID]: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <set-payload value="cf:0:_v8" doc:name="Set Payload"/>
        <logger level="INFO"
                message="Received executeTransfer(#[id]) response for interopID=#[sessionVars.interopID], http.status=#[message.outboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.transfers-fulfillment.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="put.transfers-fulfillment.start" endSnapKey="put.transfers-fulfillment.stop" category="l1p.interop-ilp-ledger.transfers-fulfillment.api" metricKey="TransfersFulfillmentPutRequestTime" doc:name="Metrics Record"/>
        <metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.transfers-fulfillment.api" doc:name="metrics-count">
            <metrics:metric-keys><metrics:metric-key>TransfersFulfillmentPutRequest</metrics:metric-key></metrics:metric-keys>
        </metrics:inc-count>
    </flow>

    <flow name="put:/transfers/{id}/rejection:test-api-config">
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.transfers-rejection.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling rejectTransfer(#[id]) for interopID=#[sessionVars.interopID]: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <set-payload value="cf:0:_v8" mimeType="text/plain" doc:name="Set Payload"/>
        <logger level="INFO"
                message="Received rejectTransfer(#[id]) response for interopID=#[sessionVars.interopID], http.status=#[message.outboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="put.transfers-rejection.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="put.transfers-rejection.start" endSnapKey="put.transfers-rejection.stop" category="l1p.interop-ilp-ledger.transfers-rejection.api" metricKey="TransfersRejectionPutRequestTime" doc:name="Metrics Record"/>
        <metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.transfers-rejection.api" doc:name="metrics-count">
            <metrics:metric-keys><metrics:metric-key>TransfersRejectionPutRequest</metrics:metric-key></metrics:metric-keys>
        </metrics:inc-count>
    </flow>
    <flow name="get:/connectors:test-api-config">
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.connectors.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Calling getConnectors for interopID=#[sessionVars.interopID]: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <set-payload value="{}" doc:name="Set Payload"/>
        <logger level="INFO"
                message="Received getConnectors response for interopID=#[sessionVars.interopID], http.status=#[message.outboundProperties.'http.status']: #[payload]"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.connectors.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="get.connectors.start" endSnapKey="get.connectors.stop" category="l1p.interop-ilp-ledger.connectors.api" metricKey="ConnectorsGetRequestTime" doc:name="Metrics Record"/>
        <metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.connectors.api" doc:name="metrics-count">
            <metrics:metric-keys><metrics:metric-key>ConnectorsGetRequest</metrics:metric-key></metrics:metric-keys>
        </metrics:inc-count>
    </flow>
	<flow name="post:/messages:test-api-config">
    	<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.connectors.start" doc:name="SnapTime"/>
        <logger level="INFO"
                message="Received postMessages request for interopID=#[sessionVars.interopID]: #[payload] in mock"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <set-payload value="{}" doc:name="Set Payload"/>
        <logger level="INFO"
                message="Sending postMessages response for interopID=#[sessionVars.interopID], http.status=#[message.outboundProperties.'http.status']: #[payload] from mock"
                category="com.l1p.interop.dfsp.api-main" doc:name="logger"/>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.connectors.stop" doc:name="SnapTime"/>
        
        <metrics:time config-ref="metricsConfig" beginSnapKey="get.connectors.start" endSnapKey="get.connectors.stop" category="l1p.interop-ilp-ledger.connectors.api" metricKey="ConnectorsGetRequestTime" doc:name="Metrics Record"/>
        <metrics:inc-count config-ref="metricsConfig" category="l1p.interop-ilp-ledger.connectors.api" doc:name="metrics-count">
            <metrics:metric-keys><metrics:metric-key>ConnectorsGetRequest</metrics:metric-key></metrics:metric-keys>
        </metrics:inc-count>
    </flow>
</mule>
