<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans"
	xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

	<description>
		- Receives and routes DFSP Directory Gateway API requests
		- Base http listener received all requests sent to /directory/*
	</description>

	<!-- Import common xml file that imports properties files at various levels -->
	<spring:beans>
		<spring:import resource="classpath:services-common.xml" />
		<spring:import resource="classpath:metrics.xml" />
		
		<spring:bean id="actualLedgerToLedgerAdapterUrlTransformer"
			class="com.l1p.interop.ActualLedgerToLedgerAdapterUrlTransformer">
			<spring:property name="ledgerUrlMapper" ref="ledgerUrlMapper" />
			<spring:property name="urlFields">
				<spring:list>
					<spring:value>id</spring:value>
					<spring:value>ledger</spring:value>
					<spring:value>debits.account</spring:value>
					<spring:value>credits.account</spring:value>
					<spring:value>sourceAccount</spring:value>
					<spring:value>account</spring:value>
				</spring:list>
			</spring:property>
		</spring:bean>

		<spring:bean id="ledgerAdapterToActualLedgerUrlTransformer"
			class="com.l1p.interop.LedgerAdatperToActualLedgerUrlTransformer">
			<spring:property name="ledgerUrlMapper" ref="ledgerUrlMapper" />
			<spring:property name="urlFields">
				<spring:list>
					<spring:value>id</spring:value>
					<spring:value>ledger</spring:value>
					<spring:value>debits.account</spring:value>
					<spring:value>credits.account</spring:value>
					<spring:value>sourceAccount</spring:value>
					<spring:value>account</spring:value>
				</spring:list>
			</spring:property>
		</spring:bean>

		<spring:bean id="ledgerUrlMapper"
			class="com.l1p.interop.ilp.ledger.LedgerUrlMapper">
			<!-- Going from dfsp/actual ledger to adapter -->
			<spring:constructor-arg value="${ilp-ledger.url.replacement.regex}" />
			<spring:constructor-arg value="${ilp-ledger-adapter.ledgerAdapterURL}" />
			<!-- Going from adapter to dfsp/actual ledger -->
			<spring:constructor-arg value="${ilp-ledger-adapter.url.replacement.regex}" />
			<spring:constructor-arg value="${ilp-ledger.ledgerURL}" />
		</spring:bean>
	</spring:beans>

	<spring:beans>
		<spring:bean id="MockExceptionTransformer" name="ExceptionTransformer"
			class="com.l1p.interop.L1PExceptionTransformer" />
	</spring:beans>

	<apikit:config name="test-api-config" disableValidations="true"
		raml="ilp-ledger-adapter.raml" consoleEnabled="false" doc:name="Router" />

	<flow name="test-api-main" initialState="started">
		<http:listener config-ref="api-httpListenerConfig" path="${ilp-ledger.basePath}/*"
			doc:name="HTTP" />
		<object-to-string-transformer doc:name="Object to String" />
		<set-session-variable variableName="traceID"
			value="#[(message.inboundProperties.'http.traceID' == empty) ? java.util.UUID.randomUUID() : message.inboundProperties.'http.query.traceID']"
			doc:name="set-traceID" />
		<logger level="INFO"
			message="Received request for traceID=#[sessionVars.traceID] at path=#[message.inboundProperties.'http.request.path'], method=#[message.inboundProperties.'http.method'], Content-Type=#[message.inboundProperties.'Content-Type']"
			category="com.l1p.interop.dfsp.mock-api-main" doc:name="logger" />
		<apikit:router config-ref="test-api-config" doc:name="APIkit Router" />
		<exception-strategy ref="test-api-apiKitGlobalExceptionMapping"
			doc:name="Reference Exception Strategy" />
	</flow>

	<apikit:mapping-exception-strategy
		name="test-api-apiKitGlobalExceptionMapping">
		<apikit:mapping statusCode="404">
			<!--<logger level="ERROR" -->
			<!--message="Received 404 error - org.mule.module.apikit.exception.NotFoundException: 
				#[exception.getCauseException().getMessage();]" -->
			<!--category="some.category"/> -->
			<apikit:exception
				value="org.mule.module.apikit.exception.NotFoundException" />
			<set-session-variable variableName="errorMessageId"
				value="Resource not found" doc:name="set-errorMessageId" />
			<transformer ref="MockExceptionTransformer" doc:name="ExceptionTransformer" />
		</apikit:mapping>
		<apikit:mapping statusCode="405">
			<!--<logger level="ERROR" -->
			<!--message="Received 405 error - org.mule.module.apikit.exception.MethodNotAllowedException: 
				#[exception.getCauseException().getMessage();]" -->
			<!--category="some.category"/> -->
			<apikit:exception
				value="org.mule.module.apikit.exception.MethodNotAllowedException" />
			<set-session-variable variableName="errorMessageId"
				value="Method Not Allowed" doc:name="set-errorMessageId" />
			<transformer ref="MockExceptionTransformer" doc:name="ExceptionTransformer" />
		</apikit:mapping>
		<apikit:mapping statusCode="415">
			<!--<logger level="ERROR" -->
			<!--message="Received 415 error - org.mule.module.apikit.exception.UnsupportedMediaTypeException: 
				#[exception.getCauseException().getMessage();]" -->
			<!--category="some.category"/> -->
			<apikit:exception
				value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
			<set-session-variable variableName="errorMessageId"
				value="Unsupported MediaType" doc:name="set-errorMessageId" />
			<transformer ref="MockExceptionTransformer" doc:name="ExceptionTransformer" />
		</apikit:mapping>
		<apikit:mapping statusCode="406">
			<!--<logger level="ERROR" -->
			<!--message="Received 406 error - org.mule.module.apikit.exception.NotAcceptableException: 
				#[exception.getCauseException().getMessage();]" -->
			<!--category="some.category"/> -->
			<apikit:exception
				value="org.mule.module.apikit.exception.NotAcceptableException" />
			<set-session-variable variableName="errorMessageId"
				value="Not Acceptable" doc:name="set-errorMessageId" />
			<transformer ref="MockExceptionTransformer" doc:name="ExceptionTransformer" />
		</apikit:mapping>
		<apikit:mapping statusCode="400">
			<!--<logger level="ERROR" -->
			<!--message="Received 400 error - org.mule.module.apikit.exception.BadRequestException: 
				#[exception.getCauseException().getMessage();]" -->
			<!--category="some.category"/> -->
			<apikit:exception
				value="org.mule.module.apikit.exception.BadRequestException" />
			<set-session-variable variableName="errorMessageId"
				value="Bad request" doc:name="set-errorMessageId" />
			<transformer ref="MockExceptionTransformer" doc:name="ExceptionTransformer" />
		</apikit:mapping>
		<apikit:mapping statusCode="500">
			<!--<logger level="ERROR" -->
			<!--message="Received 500 error - org.mule.api.transformer.TransformerMessagingException: 
				#[exception.getCauseException().getMessage();]" -->
			<!--category="some.category"/> -->
			<apikit:exception
				value="org.mule.api.transformer.TransformerMessagingException" />
			<set-session-variable variableName="errorMessageId"
				value="Transformer Messaging Exception" doc:name="set-errorMessageId" />
			<transformer ref="MockExceptionTransformer" doc:name="ExceptionTransformer" />
		</apikit:mapping>
	</apikit:mapping-exception-strategy>

</mule>
